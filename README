Simka: Fast kmer-based method for estimating the similarity between numerous metagenomic datasets
Gaetan Benoit, Pierre Perterlongo, Dominique Lavenier, Claire Lemaitre	  		  
May 2015


LICENSE
	*  GNU AFFERO GENERAL PUBLIC LICENSE
	*  Copyright (C) 2015 INRIA
	see the LICENSE file
	
INSTALL
	CMake is required to compile sitka (http://www.cmake.org/cmake/resources/software.html)
	See the INSTALL file.
	NOTE: If you retrieved a source archive, you can compile the project with 'sh INSTALL’

	compilation was tested with gcc and g++ version>=4.5 and clang version>=4.1
	
CHANGELOG

-version 0.1  May 28, 2015  
 initial public release


MANUAL	 
								
1/ Description
Simka estimates the similarity of two datasets based on their shared kmers.
To scale on N large datasets, we use the multiset kmer counting algorithm of GATB-DSK.

2/ Input
	The input file (-in) lists the datasets.
	One dataset per line with the following syntax:
		ID filename
		ID filename1 filename2 filename3 ...
	If multiple filenames are defined, the dataset is the concatenation of each file. Except if
	-max-reads option is used, we get maxReads/N reads in each files (where N is the number
	of filenames).

	You can see an input example in the folder «example»
	Ex:
		dataset_1_name /path/to/dataset1
		dataset_2_name ../path/to/dataset2
		paired_dataset /path/to/dataset_1 /path/to/dataset_2
		n_dataset /path/to/dataset_1 /path/to/dataset_2 /path/to/dataset_3 /path/to/dataset_N
		…
		dataset_N_name ./path/to/datasetN


3/ Output
	By default, Simka provides two similarity function:
		- presenceAbsence_jaccard
			Based on the amount of distinct kmers shared by two datasets.
			Informed about presence/abscence of species.
		- abundance_jaccard
			Based on the total kmers shared by two datasets
			Informed about abundance of species.

		Two matrix per similarity functions are provided:
			- asymmetrical (asym): Result of Sim(A,B) is different than Sim(B,A). Useful to visualize absolute similarity (heatmap colors)
			- symmetrical (sym): Useful to visualize relative similarity (heatmap dendrogram/clustering)

4/ Generating heatmaps
	Required python
	Required R and gplots package

	Run the script create_heatmaps.py in the scripts folder.
		python create_heatmaps.py matrixFolder
		where matrixFolder in the folder containing the results (output) of Simka
		

5/ Usage for simka

	See help:
		./simka


6/ Examples:

	Run the toy example:
		./simka -in example/simka_input -out example/

	Changing kmer size
		./simka -in example/simka_input -out example/ -kmer-size 22

	Filtering uniq kmers (potentially erroneous) and very high abundance kmers (potentially contaminants):
		./simka -in example/simka_input -out example/ -abundance-min 2 -abundance-max 200

	Allowing more memory and cores improve the execution time:
		./simka -in example/simka_input -out example/ -max-memory 60000 -nb-cores 8

 	Filtering input reads:
		Minimum read size of 90. Discards low complexity reads (shannon index < 1.5). 10000 reads maximum used per dataset
		./simka -in example/simka_input -out example/ -min-read-size 90 -read-shannon-index 1.5 -max-reads 10000
          
