Simka
Developper: Gaëtan Benoit
Contact: gaetan.benoit@inria.fr

Reference
	Multiple comparative metagenomics using multiset k-mer counting
	Gaëtan Benoit, Pierre Peterlongo, Mahendra Mariadassou, Erwan Drezen, Sophie Schbath, Dominique Lavenier, Claire Lemaitre

LICENSE
	*  GNU AFFERO GENERAL PUBLIC LICENSE
	*  Copyright (C) 2015 INRIA
	see the LICENSE file
	
INSTALL
	CMake is required to compile sitka (http://www.cmake.org/cmake/resources/software.html)
	See the INSTALL file.
	NOTE: If you retrieved a source archive, you can compile the project with 'sh INSTALL’

	compilation was tested with gcc and g++ version>=4.5 and clang version>=4.1

	The installation creates 3 executables:
		- simka
		- simkaCount
		- simkaMerge
	simkaCount and simkaMerge are used internally by simka. They must stay in the same folder than simka.
	
CHANGELOG

-version 1  Feb 16, 2016  
 stable version
-version 0.1  May 28, 2015  
 initial public release

TABLE OF CONTENTS
1/ Description
2/ Input
3/ Output
4/ Generating heatmaps and clustering
5/ Usage for simka
6/ The options of simka by command examples
7/ Computer cluster options
8/ Possible issues with Simka

MANUAL	 
								
1/ Description
	Simka computes several ecology distances between N metagenomic read sets at the k-mer level.
	Simka was implemented with the GATB library (http://gatb.inria.fr/)


2/ Input
	The input file (-in) lists the samples. This sample can be in fasta, fastq and in
	gzip compressed format (.gz).
	One sample per line with the following syntax:
		ID1: filename.fasta
		ID2: filename.fasta
		ID3: filename.fasta
	The sample ID in the name that will appear in the headers of the distance matrices.

	Simka supports the management of paired and concatenated files.

	If you have paired files, you can list them separated by a ‘;’:
		ID1_paired: filename_pair1.fasta ; filename_pair2.fasta

	If you want to concatenate some files (for example, if you have multiple experiment
	for a single environment), you can list them separated by a ‘,’:
		ID1_concat: filenameX.fasta.gz , filenameY.fasta.gz
	
	You can combine concatenated and paired operations:
		ID1_concat: filenameX_1.fasta.gz , filenameY_1.fasta.gz ; filenameX_2.fasta.gz , filenameY_2.fasta.gz
	
	There is a difference between paired and concatenated files depending on the value of the option -max-reads.
	Example:
		If -max-reads is set to 100. Simka will considered the 100 first reads of the first
		paired files and the 100 first reads of the second paired files…

3/ Output

	Temporary output

		The option -out-tmp controls where the temporary files of Simka will be stored.
		This option is mandatory since the disk usage of Simka can be high depending on the input size.
		This option must target a directory on your faster disk with some free space.

		At the end of an execution, Simka does not remove the temporary files.
		These files can be re-used in case you want to add new samples in the input files.
		In this case, Simka will not count again the samples already counted.

	Results output

		The option -out is the directory which will hold the distances matrices.
		By default, Simka provides simple ecology abundance-based distance and several presence-absence-based distances.
		To compute more complex ecology distance, you must add the option -ecology.

		The matrice names follow this template:
			mat_[abundance|presenceAbsence]_[distanceName].csv

			The distance matrices containing ‘simka’ are distances introduces by the comparead
			method (See equation 1 of the Simka paper).
			These distances have the advantage of having a symmetrical and asymmetrical version.

4/ Generating heatmaps and clustering
	Required python
	Required R and gplots package

	Run the script create_heatmaps.py in the scripts folder.
		Ex: python create_heatmaps.py matricesFolder
		where matricesFolder in the folder containing the distances matrices of Simka (-out)
		

5/ Usage for simka

	See help:
		./simka


6/ The options of simka by command examples:

	Run the toy example:
		./simka -in example/simka_input.txt -out results -out-tmp temp_output

	Compute (additionnally to simple distances) more complex ecology distances such as Bray-Curtis, Jensen-Shannon…
		./simka … -ecology

	Changing kmer size
		./simka … -kmer-size 22

	Filtering kmers seen one time (potentially erroneous) and very high abundance kmers (potentially contaminants):
		./simka … -abundance-min 2 -abundance-max 200

 	Filtering over the sequences of the reads and k-mers:
		Minimum read size of 90. Discards low complexity reads and k-mers (shannon index < 1.5)
		./simka … -min-read-size 90 -read-shannon-index 1.5 -kmer-shannon-index 1.5
          
	Considering a subset of the reads of the input dataset (for dataset with non-uniform reads per sample):
		Considers all the reads of each samples (default)
			./simka … -max-reads -1
		Let Simka compute automatically the maximum of read per samples
			./simka … -max-reads 0 
 		Used only the first 1000 reads of each samples:
			./simka … -max-reads 1000
		
	Allowing more memory and cores improve the execution time:
		./simka … -max-memory 20000 -nb-cores 8
		 

7/ Computer cluster options

	Simka can be ran on computer cluster equipped of a job scheduling system such as SGE.
	Giving a job file template and a submission command, Simka will take care of creating and
	synchronizing the jobs until the end of the execution.

	You must provide the filenames to two job templates, one for counting and one for merging (-count-file -count-merge).
	There are example of file templates in the folder ‘example/potara_job’.

	And you must provide a submission command for both job (-count-cmd -merge-cmd)
	Example for SGE:
		-count-cmd ‘qsub  -pe make 8’ -merge-cmd qsub

	The option -max-count and -max-merge controls the maximum of simultaneous jobs.
	They have to be fixed if you system have a maximum of jobs restriction.

	Command example:
		./simka … -count-file example/potara_job/sge/job_count -merge-file example/potara_job/sge/job_merge
                          -count-cmd qsub -pe make 34 -merge-cmd qsub
			  -max-count 6 -max-merge 18 -nb-cores 200 -max-memory 500000
                Simka will run a maximum of 6 simultaneous counting jobs, each using 200/6 cores and 500000/6 MB of memory.
		Simka will run a maximum of 18 merging jobs. A merging job can not be ran on more than 1 core and use very low memory.
		by default Simka use -nb-cores/2 counting jobs simultaneously and -nb-cores merging jobs simultaneously.


8/ Possible issues with Simka
	
	- TOO MUCH OPENED FILES
		Simka is a disk-based method. Depending on the chosen options (-nb-cores -max-memory), it is possible that Simka
		required a lot of open files.
		You can fix this issue in two ways:
			- increasing the maximum open files limit imposed by your system: ulimit -n maxFiles
			- reducing the number of files opened by Simka by using the option -max-count and -max-merge
