/*****************************************************************************
 *   Simka: Fast kmer-based method for estimating the similarity between numerous metagenomic datasets
 *   A tool from the GATB (Genome Assembly Tool Box)
 *   Copyright (C) 2015  INRIA
 *   Authors: G.Benoit, C.Lemaitre, P.Peterlongo
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Affero General Public License as
 *  published by the Free Software Foundation, either version 3 of the
 *  License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Affero General Public License for more details.
 *
 *  You should have received a copy of the GNU Affero General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *****************************************************************************/

#ifndef _TOOL_Simka_HPP_
#define _TOOL_Simka_HPP_

/********************************************************************************/
#include <gatb/gatb_core.hpp>
/********************************************************************************/


//using namespace gatb::core::system;
//using namespace gatb::core::system::impl;

////////////////////////////////////////////////////////////////////////////////
//
// THIS FILE IS AUTOMATICALLY GENERATED...
//
// THIS IS A SIMPLE EXAMPLE HOW TO USE THE Tool CLASS. IF YOU WANT MORE FEATURES,
// YOU CAN HAVE A LOOK AT THE ToyTool SNIPPET HERE:
//
//      http://gatb-core.gforge.inria.fr/snippets_tools.html
//
////////////////////////////////////////////////////////////////////////////////




class Simka : public Tool
{

public:

    //typedef typename Kmer<KSIZE_1>::Type  Type;
    //typedef typename Kmer<KSIZE_1>::Count Count;
    //typedef kmer::impl::Kmer<>::ModelDirect KmerModel;

    // Constructor
	Simka();

    // Actual job done by the tool is here
    void execute ();
    static IOptionsParser* createOptionsParser (IOptionsParser* parent);
    //static void executeAlgorithm (Simka& simka, IProperties* props);


private:

};


#endif /* _TOOL_Simka_HPP_ */

