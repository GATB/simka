      SUMMARY OF THE HDF5 CONFIGURATION
      =================================

General Information:
-------------------
                   HDF5 Version: @HDF5_PACKAGE_VERSION@
                  Configured on: @CONFIG_DATE@
                  Configured by: @CMAKE_GENERATOR@
                 Configure mode: CMAKE @CMAKE_VERSION@
                    Host system: @CMAKE_HOST_SYSTEM@
              Uname information: @CMAKE_SYSTEM_NAME@
                       Byte sex: @BYTESEX@
                      Libraries: @BUILD_NAME_EXT@
             Installation point: @CMAKE_INSTALL_PREFIX@

Compiling Options:
------------------
               Compilation Mode: @CMAKE_BUILD_TYPE@
                     C Compiler: @CMAKE_C_COMPILER@
                         CFLAGS: @CMAKE_C_FLAGS@
                      H5_CFLAGS: @H5_CFLAGS@
                      AM_CFLAGS: @AM_CFLAGS@
                       CPPFLAGS: @CMAKE_CXX_FLAGS@
                    H5_CPPFLAGS: @H5_CPPFLAGS@
                    AM_CPPFLAGS: @AM_CPPFLAGS@
               Shared Libraries: @H5_ENABLE_SHARED_LIB@
               Static Libraries: @H5_ENABLE_STATIC_LIB@
  Statically Linked Executables: @BUILD_STATIC_EXECS@
                        LDFLAGS: @CMAKE_SHARED_LINKER_FLAGS@
                     AM_LDFLAGS: @AM_LDFLAGS@
                Extra libraries: @LINK_LIBS@
                       Archiver: @CMAKE_AR@
                         Ranlib: @CMAKE_RANLIB@
              Debugged Packages: @DEBUG_PKG@
                    API Tracing: @HDF5_ENABLE_TRACE@

Languages:
----------
                        Fortran: @HDF5_BUILD_FORTRAN@
@BUILD_FORTRAN_CONDITIONAL_TRUE@               Fortran Compiler: @CMAKE_Fortran_COMPILER@
@BUILD_FORTRAN_CONDITIONAL_TRUE@          Fortran 2003 Compiler: @HDF5_ENABLE_F2003@
@BUILD_FORTRAN_CONDITIONAL_TRUE@                  Fortran Flags: @CMAKE_Fortran_FLAGS@
@BUILD_FORTRAN_CONDITIONAL_TRUE@               H5 Fortran Flags: @H5_FCFLAGS@
@BUILD_FORTRAN_CONDITIONAL_TRUE@               AM Fortran Flags: @AM_FCFLAGS@
                            C++: @HDF5_BUILD_CPP_LIB@
@BUILD_CXX_CONDITIONAL_TRUE@                   C++ Compiler: @CMAKE_CXX_COMPILER@
@BUILD_CXX_CONDITIONAL_TRUE@                      C++ Flags: @CMAKE_CXX_FLAGS@
@BUILD_CXX_CONDITIONAL_TRUE@                   H5 C++ Flags: @H5_CXXFLAGS@
@BUILD_CXX_CONDITIONAL_TRUE@                   AM C++ Flags: @AM_CXXFLAGS@

Features:
---------
                  Parallel HDF5: @HDF5_ENABLE_PARALLEL@
             High Level library: @HDF5_BUILD_HL_LIB@
                   Threadsafety: @HDF5_ENABLE_THREADSAFE@
            Default API Mapping: @DEFAULT_API_VERSION@
 With Deprecated Public Symbols: @HDF5_ENABLE_DEPRECATED_SYMBOLS@
         I/O filters (external): @EXTERNAL_FILTERS@
         I/O filters (internal): @FILTERS@
                            MPE: @H5_HAVE_LIBLMPE@
                     Direct VFD: @H5_HAVE_DIRECT@
                        dmalloc: @H5_HAVE_LIBDMALLOC@
Clear file buffers before write: @HDF5_Enable_Clear_File_Buffers@
           Using memory checker: @HDF5_ENABLE_USING_MEMCHECKER@
         Function Stack Tracing: @HDF5_ENABLE_CODESTACK@
                           GPFS: @HDF5_ENABLE_GPFS@
      Strict File Format Checks: @HDF5_STRICT_FORMAT_CHECKS@
   Optimization Instrumentation: @HDF5_Enable_Instrument@
       Large File Support (LFS): @HDF5_ENABLE_LARGE_FILE@
