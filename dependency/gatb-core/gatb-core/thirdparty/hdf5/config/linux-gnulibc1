#							-*- shell-script -*-
#
# Copyright by The HDF Group.
# Copyright by the Board of Trustees of the University of Illinois.
# All rights reserved.
#
# This file is part of HDF5.  The full HDF5 copyright notice, including
# terms governing use, modification, and redistribution, is contained in
# the files COPYING and Copyright.html.  COPYING can be found at the root
# of the source code distribution tree; Copyright.html can be found at the
# root level of an installed copy of the electronic HDF5 document set and
# is linked from the top-level documents page.  It can also be found at
# http://hdfgroup.org/HDF5/doc/Copyright.html.  If you do not have
# access to either file, you may request a copy from help@hdfgroup.org.


# This file is part of the HDF5 build script.  It is processed shortly
# after configure starts and defines, among other things, flags for
# the various compile modes.
#
# See BlankForm in this directory for details.

# The default compiler is `gcc'.
if test -z "$CC"; then
    if test "X-$enable_parallel" = "X-yes"; then
	# default to use mpicc which is the defacto MPI compiler name
	CC=mpicc
	CC_BASENAME=mpicc
    else
	CC=gcc
	CC_BASENAME=gcc
    fi
fi

# Figure out GNU C compiler flags
. $srcdir/config/gnu-flags

# Figure out PGI C compiler flags
. $srcdir/config/pgi-flags

# Figure out Intel C compiler flags
. $srcdir/config/intel-flags

echo "CC_BASENAME is $CC_BASENAME."
# Use default Fortran 90 compiler according to what C compiler is used.
if test "X-" = "X-$FC"; then
    case $CC_BASENAME in
        gcc*)
            FC=gfortran
            FC_BASENAME=gfortran
            ;;
	pgcc*)
            FC=pgf90
            FC_BASENAME=pgf90
            ;;
        icc*)
            FC=ifort
            FC_BASENAME=ifort
            ;;
        mpicc*)
            FC=mpif90
            FC_BASENAME=mpif90
            ;;
    esac
else
    case $FC in
        # The PGI and Intel compilers are automatically detected below
        ifc*|ifort*|pgf90*)
            ;;

        *f95*)
            # Figure out which compiler we are using: pgf90 or Absoft f95
            RM='rm -f'
            tmpfile=/tmp/cmpver.$$
            $FC -V >$tmpfile
            if test -s "$tmpfile"; then 
                if( grep -s 'Absoft' $tmpfile > /dev/null) then
                    FC_BASENAME=f95
                fi 
                if( grep -s 'pgf90' $tmpfile > /dev/null) then
                    FC_BASENAME=pgf90
                fi 
            fi
            $RM $tmpfile
            fc_version_info=`$FC -V | grep Absoft`
            ;;

         *)
            ;;
    esac
fi

# Figure out PGI F90 compiler flags
. $srcdir/config/pgi-fflags

# Figure out Intel F90 compiler flags
. $srcdir/config/intel-fflags

case $FC_BASENAME in
    #
    # Absoft compiler
    #
    f95)
        # Set required flag for compiling C stubs
        H5_CFLAGS="$H5_CFLAGS" 

        F9XSUFFIXFLAG=""
# We force compiler to use upper case for external names 
# (just in case since this should be a default EIP)
        H5_FCFLAGS="$H5_FCFLAGS"
        FSEARCH_DIRS=""
        DEBUG_FCFLAGS="-g"
        PROD_FCFLAGS="-O"
        PROFILE_FCFLAGS="-g -pg"
        f9x_flags_set=yes
        ;;

esac  

# The default C++ compiler

# The default compiler is `g++'.
if test -z "$CXX"; then
  CXX=g++
  CXX_BASENAME=g++
fi

# compiler version strings
case $CC in
    # whatever matches *pgcc* will also match *gcc*, so this one must come first
    *pgcc*)
        cc_version_info=`$CC $CFLAGS $H5_CFLAGS -V 2>&1 | grep 'pgcc'`
        ;;

    *gcc*)
        cc_version_info=`$CC $CFLAGS $H5_CFLAGS --version 2>&1 | grep -v 'PathScale' |\
            grep 'GCC' | sed 's/\(.*(GCC) [-a-z0-9\. ]*\).*/\1/'`
        ;;

    *icc*)
        cc_version_info=`$CC $CCFLAGS $H5_CCFLAGS -V 2>&1 | grep 'Version' |\
            sed 's/\(Intel.* Compiler\).*\( Version [a-z0-9\.]*\).*\( Build [0-9]*\)/\1\2\3/'`
        ;;

    *)
        echo "No match to get cc_version_info for $CC"
        ;;
esac

# get fortran version info
case $FC in
    *gfortran*)
        fc_version_info=`$FC $FCFLAGS $H5_FCFLAGS --version 2>&1 |\
            grep 'GCC' | sed 's/\(.*(GCC) [-a-z0-9\. ]*\).*/\1/'`
        ;;

    *ifc*|*ifort*)
        fc_version_info=`$FC $FCFLAGS $H5_FCFLAGS -V 2>&1 | grep 'Version' |\
            sed 's/\(Intel.* Compiler\).*\( Version [a-z0-9\.]*\).*\( Build [0-9]*\)/\1\2\3/'`
        ;;

    *f95*)
        # Figure out which compiler we are using: pgf90 or Absoft f95
        RM='rm -f'
        tmpfile=/tmp/cmpver.$$
        $FC -V >$tmpfile
        if test -s "$tmpfile"; then 
            if( grep -s 'Absoft' $tmpfile > /dev/null) then
                FC_BASENAME=f95
            fi 
        fi
        $RM $tmpfile
        fc_version_info=`$FC -V | grep Absoft`
        ;;

    *g95*)
        fc_version_info=`$FC $FCFLAGS $H5_FCFLAGS --version 2>&1 |\
            grep 'GCC'` 
        ;;

    *pgf90*)
        fc_version_info=`$FC $FCFLAGS $H5_FCFLAGS -V 2>&1 | grep 'pgf90'`
        ;;

     *)
        echo "No match to get fc_version_info for $FC"
        ;;
esac


# get c++ version info
case $CXX in
    *g++*)
        cxx_version_info=`$CXX $CXXFLAGS $H5_CXXFLAGS --version 2>&1 |\
            grep 'GCC' | sed 's/\(.*(GCC) [-a-z0-9\. ]*\).*/\1/'`
        ;;
    *icpc*)
        cxx_version_info=`$CXX $CXXFLAGS $H5_CXXFLAGS -V 2>&1 | grep 'Version' |\
            sed 's/\(Intel.* Compiler\).*\( Version [a-z0-9\.]*\).*\( Build [0-9]*\)/\1\2\3/'`
        ;;
    *pgCC*)
        cxx_version_info=`$CXX $CXXFLAGS $H5_CXXFLAGS -V 2>&1 | grep 'pgCC'`
        ;;


    *)
        echo "No match to get cxx_version_info for $CXX"
        ;;
esac

